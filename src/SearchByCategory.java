
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Hamid
 */
public class SearchByCategory extends javax.swing.JFrame {

    UserScreen us =new UserScreen();
    SavedData sd=new SavedData();
    
    /**
     * Creates new form SearchByCategory
     */
    public SearchByCategory() {
        initComponents();
        initiatecategory();
        Name.setVisible(false);
        jComboBox2.setVisible(false);
        Search.setVisible(false);
        BookName.setVisible(false);
        AuthorName.setVisible(false);
        Year.setVisible(false); 
        SectionName.setVisible(false);
        RackName.setVisible(false); 
        BookAns1.setVisible(false);
        AuthorAns1.setVisible(false);
        YearAns1.setVisible(false);
        CatAns1.setVisible(false);
        RackAns1.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        Category = new javax.swing.JLabel();
        Name = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        Next = new javax.swing.JButton();
        BookName = new javax.swing.JLabel();
        AuthorName = new javax.swing.JLabel();
        BookAns1 = new javax.swing.JLabel();
        Year = new javax.swing.JLabel();
        AuthorAns1 = new javax.swing.JLabel();
        SectionName = new javax.swing.JLabel();
        YearAns1 = new javax.swing.JLabel();
        RackName = new javax.swing.JLabel();
        CatAns1 = new javax.swing.JLabel();
        RackAns1 = new javax.swing.JLabel();
        Search = new javax.swing.JButton();
        Main = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Search by Category");

        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        Category.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Category.setText("Select the Section You want to search:");

        Name.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Name.setText("Select the Book:");

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        Next.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Next.setText("Next");
        Next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextActionPerformed(evt);
            }
        });

        BookName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BookName.setText("Book:");

        AuthorName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        AuthorName.setText("Author Name:");

        BookAns1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        BookAns1.setForeground(new java.awt.Color(0, 0, 102));
        BookAns1.setText("                                           ");

        Year.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Year.setText("Year Published:");

        AuthorAns1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        AuthorAns1.setForeground(new java.awt.Color(0, 0, 102));
        AuthorAns1.setText("                                           ");

        SectionName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        SectionName.setText("Section:");

        YearAns1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        YearAns1.setForeground(new java.awt.Color(0, 0, 102));
        YearAns1.setText("                                           ");

        RackName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        RackName.setText("Rack:");

        CatAns1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        CatAns1.setForeground(new java.awt.Color(0, 0, 102));
        CatAns1.setText("                                           ");

        RackAns1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        RackAns1.setForeground(new java.awt.Color(0, 0, 102));
        RackAns1.setText("                                           ");

        Search.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Search.setText("Show Details");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        Main.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Main.setText("Main Menu");
        Main.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MainActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(96, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Name)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Category)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Next, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Search))
                .addGap(58, 58, 58))
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(Main)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(173, 173, 173)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(AuthorName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Year, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(BookName, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))
                    .addComponent(SectionName, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RackName, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(YearAns1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CatAns1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RackAns1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BookAns1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(AuthorAns1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Category, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Next))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Search))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BookName)
                    .addComponent(BookAns1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AuthorName)
                    .addComponent(AuthorAns1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Year)
                    .addComponent(YearAns1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SectionName)
                    .addComponent(CatAns1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RackName)
                    .addComponent(RackAns1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(Main)
                .addGap(26, 26, 26))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void NextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextActionPerformed
        // TODO add your handling code here:

        Next.setText("Change");
        jComboBox2.removeAllItems();
        String category;
        category= jComboBox1.getSelectedItem().toString();

        initiateBooks(category);
        Name.setVisible(true);
        jComboBox2.setVisible(true);
        Search.setVisible(true);
    }//GEN-LAST:event_NextActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        // TODO add your handling code here:
         String book;
         
         BookName.setVisible(true);
        AuthorName.setVisible(true);
        Year.setVisible(true); 
        SectionName.setVisible(true);
        RackName.setVisible(true); 
        BookAns1.setVisible(true);
        AuthorAns1.setVisible(true);
        YearAns1.setVisible(true);
        CatAns1.setVisible(true);
        RackAns1.setVisible(true);
        
        book= jComboBox2.getSelectedItem().toString();
        try {
            BookSearch(book);
        } catch (IOException ex) {
            Logger.getLogger(SearchByCategory.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_SearchActionPerformed

    private void MainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MainActionPerformed
        // TODO add your handling code here:

        this.setVisible(false);
        new UserScreen().setVisible(true);
    }//GEN-LAST:event_MainActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchByCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchByCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchByCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchByCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchByCategory().setVisible(true);
            }
        });
    }
    
     public void initiatecategory()
      {
          TreeNode objmain=new TreeNode("Categories");
          TreeNode obj1=new TreeNode("Fiction");
          TreeNode obj2=new TreeNode("Political");
          TreeNode obj3=new TreeNode("Biography");
          TreeNode obj4=new TreeNode("Science");
          TreeNode obj5=new TreeNode("Islamic");
          TreeNode obj6=new TreeNode("Magazines");
     
       
          BinaryTree tree=new BinaryTree(objmain);
          tree.root.a=obj1;
          tree.root.b=obj2;
          tree.root.c=obj3;
          tree.root.d=obj4;
          tree.root.e=obj5;
          tree.root.f=obj6;
          
          
          
            jComboBox1.addItem(tree.root.a.data);
            jComboBox1.addItem(tree.root.b.data);
            jComboBox1.addItem(tree.root.c.data); 
            jComboBox1.addItem(tree.root.d.data);
            jComboBox1.addItem(tree.root.e.data);
            jComboBox1.addItem(tree.root.f.data);
            
          
                  
          
      }
     
      public void initiateBooks(String Category)
     {
         
        BufferedReader buffer=null;
        try {
            File f=new File("E:\\3rd Semester\\DSA Lab\\Final_Project\\src\\Data.txt");
           BufferedReader br = new BufferedReader(new FileReader(f));
            Object[] lines=br.lines().toArray();
            String [] Unsorted=new String[100];
            String temp;
             String prevLine="";
             String prevprevline="";
             String prevprevprevline="";
             String prevprevprevprevline="";
               int count=0;
             for(int i=0; i<lines.length;i++)
            {
             
                String line = lines[i].toString();
                if (line.equals(Category))
                {
                   Unsorted[count]=prevprevprevprevline;
                   count++;
                }
                prevprevprevprevline=prevprevprevline;
                prevprevprevline=prevprevline;
                prevprevline=prevLine;
                prevLine=line;
            }
                for (int i = 0; i < count; i++) 
        {
            for (int j = i + 1; j < count; j++) { 
                if (Unsorted[i].compareTo(Unsorted[j])>0) 
                {
                    temp = Unsorted[i];
                    Unsorted[i] = Unsorted[j];
                    Unsorted[j] = temp;
                }
            }
        }
               
            for (int k=0; k<count; k++)
            {
                jComboBox2.addItem(Unsorted[k]);
            }
        } 
        
        catch (FileNotFoundException ex) 
        {
            Logger.getLogger(DeleteBook.class.getName()).log(Level.SEVERE, null, ex);
        } 
            
    }
      
      public void BookSearch(String book) throws FileNotFoundException, IOException
      {
           BookAns1.setText(null);
            AuthorAns1.setText(null);
            YearAns1.setText(null);
            CatAns1.setText(null);
            RackAns1.setText(null);
            
            AuthorName.setText("Author Name");
            
              File fr =new File("E:\\3rd Semester\\DSA Lab\\Final_Project\\src\\Data.txt");
            BufferedReader buffer;
            
            String nameAns;
            String authAns;
            
            buffer = new BufferedReader(new FileReader(fr));
            String line=buffer.readLine();
            
             while(line!=null)
            {
                  if (line.equals(book))
                  {
                      BookAns1.setText(line);
                      nameAns=line;
                      line=buffer.readLine();
                      line=buffer.readLine();
                      AuthorAns1.setText(line);
                      authAns=line;
                      line=buffer.readLine();
                      YearAns1.setText(line);
                      line=buffer.readLine();
                      if(line.equals("Magazines"))
                      {
                          AuthorName.setText("Publisher");
                      }
                      CatAns1.setText(line);
                      line=buffer.readLine();
                      RackAns1.setText(line);
                      line=buffer.readLine();
                      
                      if(sd.who==false)
                      {
                      addtoStack(nameAns, authAns);
                      }
                  }
                  line=buffer.readLine();
            }
            
      }
 public void addtoStack(String name, String auth) throws FileNotFoundException, IOException
    {
          StringBuilder sb = new StringBuilder();
    File f =new File(us.Path);
    try (Scanner sc = new Scanner(f)) {
        String currentLine;
        while(sc.hasNext()){
            currentLine = sc.nextLine();
            if(currentLine.equals("*****")){
              
                break;
//skips lineToRemove
            }
            sb.append(currentLine).append("\n");
        }
    }
    //Delete File Content
    PrintWriter pw = new PrintWriter(f);
    pw.close();

    BufferedWriter writer = new BufferedWriter(new FileWriter(f, true));
    writer.append(sb.toString());
    writer.close();
    
    WriteNow(name,auth);
    }
     
     
    
      public void WriteNow(String name, String author) throws IOException
    {
          
      File f=new File(us.Path);
     PrintWriter wr =new PrintWriter(new FileWriter(f, true));
       BufferedWriter bw =new BufferedWriter(wr);      
            
    
     bw.write(name);
     bw.newLine();
     bw.write(author);
      bw.newLine();
     bw.write("*****");
     bw.close();
    }
          

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AuthorAns1;
    private javax.swing.JLabel AuthorName;
    private javax.swing.JLabel BookAns1;
    private javax.swing.JLabel BookName;
    private javax.swing.JLabel CatAns1;
    private javax.swing.JLabel Category;
    private javax.swing.JButton Main;
    private javax.swing.JLabel Name;
    private javax.swing.JButton Next;
    private javax.swing.JLabel RackAns1;
    private javax.swing.JLabel RackName;
    private javax.swing.JButton Search;
    private javax.swing.JLabel SectionName;
    private javax.swing.JLabel Year;
    private javax.swing.JLabel YearAns1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    // End of variables declaration//GEN-END:variables
}
